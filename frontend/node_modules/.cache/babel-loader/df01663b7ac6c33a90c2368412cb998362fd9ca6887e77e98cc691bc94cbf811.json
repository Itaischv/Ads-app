{"ast":null,"code":"var _jsxFileName = \"/Users/itaipt/projects/advs-project/src/components/Page.js\";\nimport { loremIpsum } from \"lorem-ipsum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Page = ({\n  number\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Page \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Page content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: loremIpsum({\n          count: 1,\n          // Number of \"words\", \"sentences\", or \"paragraphs\"\n          format: \"plain\",\n          // \"plain\" or \"html\"\n          paragraphLowerBound: 3,\n          // Min. number of sentences per paragraph.\n          paragraphUpperBound: 7,\n          // Max. number of sentences per paragarph.\n          random: Math.random,\n          // A PRNG function\n          sentenceLowerBound: 5,\n          // Min. number of words per sentence.\n          sentenceUpperBound: 15,\n          // Max. number of words per sentence.\n          suffix: \"\\n\",\n          // Line ending, defaults to \"\\n\" or \"\\r\\n\" (win32)\n          units: \"sentences\" // paragraph(s), \"sentence(s)\", or \"word(s)\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Page;\nexport const PageOne = () => Page(1);\n_c2 = PageOne;\nexport const PageTwo = () => Page(2);\n_c3 = PageTwo;\nexport const PageThree = () => Page(3);\n_c4 = PageThree;\nexport const PageFour = () => Page(4);\n_c5 = PageFour;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"PageOne\");\n$RefreshReg$(_c3, \"PageTwo\");\n$RefreshReg$(_c4, \"PageThree\");\n$RefreshReg$(_c5, \"PageFour\");","map":{"version":3,"names":["loremIpsum","jsxDEV","_jsxDEV","Fragment","_Fragment","Page","number","children","fileName","_jsxFileName","lineNumber","columnNumber","count","format","paragraphLowerBound","paragraphUpperBound","random","Math","sentenceLowerBound","sentenceUpperBound","suffix","units","_c","PageOne","_c2","PageTwo","_c3","PageThree","_c4","PageFour","_c5","$RefreshReg$"],"sources":["/Users/itaipt/projects/advs-project/src/components/Page.js"],"sourcesContent":["import { loremIpsum } from \"lorem-ipsum\";\n\nconst Page = ({number}) => {\n\n\n    return(\n        <>\n            <h2>Page {number}</h2>\n            <section>\n                <h4>Page content:</h4>\n                <article>\n                    {\n                        loremIpsum({\n                            count: 1,                // Number of \"words\", \"sentences\", or \"paragraphs\"\n                            format: \"plain\",         // \"plain\" or \"html\"\n                            paragraphLowerBound: 3,  // Min. number of sentences per paragraph.\n                            paragraphUpperBound: 7,  // Max. number of sentences per paragarph.\n                            random: Math.random,     // A PRNG function\n                            sentenceLowerBound: 5,   // Min. number of words per sentence.\n                            sentenceUpperBound: 15,  // Max. number of words per sentence.\n                            suffix: \"\\n\",            // Line ending, defaults to \"\\n\" or \"\\r\\n\" (win32)\n                            units: \"sentences\",      // paragraph(s), \"sentence(s)\", or \"word(s)\"\n                        })}\n                </article>\n            </section>\n        </>\n    );\n};\n\nexport const PageOne = () => Page(1);\nexport const PageTwo = () => Page(2);\nexport const PageThree = () => Page(3);\nexport const PageFour = () => Page(4);"],"mappings":";AAAA,SAASA,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,IAAI,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAGvB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACIL,OAAA;MAAAK,QAAA,GAAI,OAAK,EAACD,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBT,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBT,OAAA;QAAAK,QAAA,EAEQP,UAAU,CAAC;UACPY,KAAK,EAAE,CAAC;UAAiB;UACzBC,MAAM,EAAE,OAAO;UAAU;UACzBC,mBAAmB,EAAE,CAAC;UAAG;UACzBC,mBAAmB,EAAE,CAAC;UAAG;UACzBC,MAAM,EAAEC,IAAI,CAACD,MAAM;UAAM;UACzBE,kBAAkB,EAAE,CAAC;UAAI;UACzBC,kBAAkB,EAAE,EAAE;UAAG;UACzBC,MAAM,EAAE,IAAI;UAAa;UACzBC,KAAK,EAAE,WAAW,CAAO;QAC7B,CAAC;MAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAACW,EAAA,GAzBIjB,IAAI;AA2BV,OAAO,MAAMkB,OAAO,GAAGA,CAAA,KAAMlB,IAAI,CAAC,CAAC,CAAC;AAACmB,GAAA,GAAxBD,OAAO;AACpB,OAAO,MAAME,OAAO,GAAGA,CAAA,KAAMpB,IAAI,CAAC,CAAC,CAAC;AAACqB,GAAA,GAAxBD,OAAO;AACpB,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAMtB,IAAI,CAAC,CAAC,CAAC;AAACuB,GAAA,GAA1BD,SAAS;AACtB,OAAO,MAAME,QAAQ,GAAGA,CAAA,KAAMxB,IAAI,CAAC,CAAC,CAAC;AAACyB,GAAA,GAAzBD,QAAQ;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}